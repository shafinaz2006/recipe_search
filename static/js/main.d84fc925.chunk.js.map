{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","recipeFound","setRecipeFound","recipeSearch","setRecipeSearch","isLoading","setIsLoading","display","setDisplay","useEffect","className","onSubmit","event","preventDefault","axios","get","then","response","data","hits","catch","error","console","log","searchRecipe","htmlFor","type","id","name","onChange","target","value","placeholder","map","recipe","i","src","image","alt","label","calories","ingredientLines","ing","j","href","url","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAkEeA,MA9Df,WAWE,MAAsCC,mBAAmB,IAAzD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAoBA,OALAC,qBAAU,WACRD,GAAW,GACXF,GAAa,KACZ,CAACL,IAGF,uBAAMS,UAAU,MAAhB,UACE,oDACA,uBAAMC,SAAU,SAAAC,GAAK,OAlBJ,SAACA,GACpBA,EAAMC,iBAENP,GAAa,GACbQ,IACGC,IADH,8DAC8DZ,EAD9D,mFAEGa,MAAK,SAAAC,GAAQ,OAAIf,EAAee,EAASC,KAAKC,SAC9CC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,yBAA0BF,MAW7BG,CAAaZ,IAAtC,UACE,uBAAOa,QAAQ,SAAf,gCACA,uBAAOC,KAAK,OAAQC,GAAG,SAASC,KAAK,eAAeC,SAvBlC,SAACjB,GACvBR,EAAgBQ,EAAMkB,OAAOC,QAsBsDA,MAAO5B,EAAc6B,YAAY,UAChH,+CAED3B,EAAW,6CAAsB,GAClC,qBAAKK,UAAU,aAAf,SACCH,EAASN,EAAYgC,KAAI,SAACC,EAAYC,GAAb,OACxB,0BAAiBzB,UAAU,SAA3B,UACE,qBAAK0B,IAAKF,EAAOA,OAAOG,MAAOC,IAAI,cAAc5B,UAAU,gBAC3D,mBAAGA,UAAU,cAAb,SAA4BwB,EAAOA,OAAOK,QAC1C,oBAAG7B,UAAU,gBAAb,uBAAwCwB,EAAOA,OAAOM,YACtD,sBAAK9B,UAAU,mBAAf,UACE,mBAAGA,UAAU,iBAAb,0BACCwB,EAAOA,OAAOO,gBACfP,EAAOA,OAAOO,gBAAgBR,KAAI,SAACS,EAASC,GAAV,OAAuB,kCAAaD,IAALC,MAAgB,MAEnF,mBAAGC,KAAMV,EAAOA,OAAOW,IAAKf,OAAO,UAAUpB,UAAU,gBAAvD,yBATYyB,MAWZ,oDC9CKW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d84fc925.chunk.js","sourcesContent":["import React, { ChangeEvent, FormEvent, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  interface Recipe {\n    recipe: {\n      ingredientLines: string[];\n      label: string;\n      calories: string;\n      image: string;\n      url: string;\n    }\n    _links:{};\n  }\n  const [recipeFound, setRecipeFound] = useState<Recipe[]>([]);\n  const [recipeSearch, setRecipeSearch] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [display, setDisplay] = useState(false);\n \n  const getSearchString = (event: ChangeEvent<HTMLInputElement>): void  =>{\n    setRecipeSearch(event.target.value);\n  }\n  const searchRecipe = (event: FormEvent<HTMLFormElement>): void =>{\n    event.preventDefault();\n    // console.log(recipeSearch);\n    setIsLoading(true);\n    axios\n      .get(`https://api.edamam.com/api/recipes/v2?type=public&q=${recipeSearch}&app_id=202b54b2&app_key=aacb28831d67e34e10029db642233e04%09&imageSize=REGULAR`)\n      .then(response => setRecipeFound(response.data.hits))\n      .catch(error => console.log('Error in response data', error));\n  }\n\n  useEffect(() =>{\n    setDisplay(true);\n    setIsLoading(false);\n  }, [recipeFound]);\n\n  return (\n    <main className=\"App\">\n      <h1> Recipe Search App</h1>\n      <form onSubmit={event => searchRecipe(event)}>\n        <label htmlFor='search'>Enter your query: </label>\n        <input type='text'  id='search' name='recipeSearch' onChange={getSearchString} value={recipeSearch} placeholder='query'/>\n        <button >Search</button>\n      </form>\n      {isLoading? <p> Loading....</p> : ''}\n      <div className='allRecipes'>\n      {display? recipeFound.map((recipe:any, i) => \n        <section key={i} className='recipe'>\n          <img src={recipe.recipe.image} alt='recipeImage' className='recipeImage'/>\n          <p className='recipeLabel'>{recipe.recipe.label}</p>\n          <p className='recipeCalorie'>Calories: {recipe.recipe.calories}</p>\n          <div className='recipeIngredient'>\n            <p className='recipeIngLabel'>Ingredients:</p>\n            {recipe.recipe.ingredientLines? \n            recipe.recipe.ingredientLines.map((ing:any, j:number) => <p key={j}> {ing}</p>): ''}\n          </div>\n          <a href={recipe.recipe.url} target='__blank' className='recipeDetails'> Details </a>\n        </section>\n      ) : '<h1> No recipe found in this category </h1>'}\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}